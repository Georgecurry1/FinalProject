#ifndef PLAYER_H
#define PLAYER_H
#include <iostream>

using namespace std;
class Player
{
    private:
        string Name;
        string Description;

        void CreatePointsArray(int); //private function to create array
        int* Points; //points to array of points
        int totalPoints;
        double avgPointsPerGame;

    public:
        Player(); //default constructor
        Player(const Player &obj) //copy constructor
    {
        Name = obj.Name;
        Description = obj.Description;

        Points = new int[10];
        for (int i=0; i<10; i++)
        {
            Points[i] = obj.Points[i];
        }

      }


        const Player operator =(const Player &right)//overload =
        {
            delete[] Points;
            Name = right.Name;
            Description = right.Description;

            Points = new int[10];
            for (int i=0; i<10; i++)
            {
                Points[i] = right.Points[i];
            }
            return *this;
        }

        //accessors
        string GetName();
        string GetDescription();
        int* GetPoints();
        int GetTotalPoints();
        double GetAvgPoints();
        //mutators
        void SetName(string);
        void SetDescription(string);
        void SetPoints(int*);//pass an array to set the points to the passed array
        void SetTotalPoints(int);
        void SetAvgPoints(double);
};

#endif // PLAYER_H
